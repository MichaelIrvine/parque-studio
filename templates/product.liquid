
{% comment %} Presale Dates {% endcomment %}
{% assign presaleStart = product.metafields.presale.start-date %}
{% assign presaleEnd = product.metafields.presale.end-date %}

{% render 'product-template' %}  


{% section 'product-collection-block' %}
{% comment %} Message Component {% endcomment %}
<div class="message font-prestige"></div>

<script>
  const preSaleWrapper = document.querySelector('.presale__wrapper');
  const timeRemainsBar = document.querySelector('.presale-bar');
  const startDate = '{{presaleStart}}';
  const endDate = '{{presaleEnd}}';
  const comingSoon = '{{comingSoon}}';



  // Add 'coming-soon' class name to Body
  if(comingSoon){
    document.body.classList.add('coming-soon');
  }

  if(Date.parse(endDate) < Date.now()){
    preSaleWrapper.querySelector('h4').innerText = "Presale has ended";
  } else {
    // init timer functions
    if (endDate > startDate) {
      getTimeRemaining(endDate);
      calculateProgressBar(endDate, startDate);
      initializeClock('.time-remaining', endDate, startDate);
    }
  }

  function getTimeRemaining(endDate) {
    const total = Date.parse(endDate) - Date.now();
    const seconds = Math.floor((total / 1000) % 60);
    const minutes = Math.floor((total / 1000 / 60) % 60);
    const hours = Math.floor((total / (1000 * 60 * 60)) % 24);
    const days = Math.floor(total / (1000 * 60 * 60 * 24));

    return {
      total,
      days,
      hours,
      minutes,
      seconds,
    };
  }

  function calculateProgressBar(endDate, startDate) {
    const timeLeft = Math.floor(
      ((Date.parse(endDate) - Date.now()) / (Date.parse(endDate) - Date.parse(startDate))) * 100
    );
    
    // Check max width of timer bar
    timeRemainsBar.style.minWidth = `${timeLeft}%`;
  }

  function initializeClock(element, endDate, startDate) {
  const clock = document.querySelector(element);
  const daysSpan = clock.querySelector('.days');
  const hoursSpan = clock.querySelector('.hours');
  const minutesSpan = clock.querySelector('.minutes');
  const secondsSpan = clock.querySelector('.seconds');

  function updateClock() {
      const t = getTimeRemaining(endDate);

      daysSpan.innerHTML = t.days;
      hoursSpan.innerHTML = ('0' + t.hours).slice(-2);
      minutesSpan.innerHTML = ('0' + t.minutes).slice(-2);
      secondsSpan.innerHTML = ('0' + t.seconds).slice(-2);

      calculateProgressBar(endDate, startDate);

      if (t.total <= 0) {
        clearInterval(timeinterval);
      }
    }

    updateClock();
    const timeinterval = setInterval(updateClock, 1000);
  }




</script>